stages:
    - style_check
    - test
    - deploy

default:
  image: python:3.13
  before_script:
    - apt-get update && apt-get install -y cmake build-essential git pkg-config ca-certificates wget libomp-dev libeigen3-dev libboost-all-dev uuid-dev libcgal-dev
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.lrz.de/".insteadOf "git@gitlab.lrz.de:"
    - poetry install --with tests,docs,tutorials
    - source .venv/bin/activate

.run-test-with-coverage: &run-test-with-coverage
  - apt-get update && apt-get install -y ffmpeg libegl1
  - coverage run --source ./crdesigner -m pytest tests/
  - coverage report -m || true


pre_commit:
  stage: style_check
  before_script:
    - pip install pre-commit
  script:
    - pre-commit run --all-files --show-diff-on-failure

build_and_test_python:
  image : python:$PYTHON_VERSIONS
  stage: test
  parallel :
    matrix :
      - PYTHON_VERSIONS : [ "3.10", "3.11", "3.12", "3.13" ]
  variables:
    QT_QPA_PLATFORM : "offscreen"
  script:
    - *run-test-with-coverage
  needs: []

build_and_update_packages_debian:
  image : python:$PYTHON_VERSIONS
  stage: test
  parallel :
    matrix :
      - PYTHON_VERSIONS : [ "3.10", "3.11", "3.12", "3.13" ]
  script:
    - poetry update
    - poetry install
  needs: []

build_and_test_with_coverage:
  stage : test
  image: python:3.13
  variables :
    QT_QPA_PLATFORM : "offscreen"
  script :
    - *run-test-with-coverage
    - coverage xml
  coverage : '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts :
    reports :
      coverage_report :
        coverage_format : cobertura
        path : coverage.xml
  needs : [ ]

pages :
  # push the latest documentation of the main branch to the Gitlab pages.
  # available at https://cps.pages.gitlab.lrz.de/commonroad/commonroad-template
  stage : deploy
  when: manual
  only :
    - master
  publish : site
  script :
    - poetry install --with docs
    - mkdocs build
  artifacts :
    paths :
      - site
  environment :
    name : Gitlab Pages
    url : https://cps.pages.gitlab.lrz.de/commonroad-scenario-designer/


build_pages:
  # Push the latest documentation of the development branch to the GitLab Pages at gitlab artifacts
  stage: deploy
  script:
    - poetry install --with docs
    - mkdocs build
  artifacts:
    paths :
      - site
  needs: []

push_to_internal_pipy_registry:
  # push the development version to the internal pipy registry https://gitlab.lrz.de/cps/commonroad-scenario-designer/-/packages
  # before manually triggering the job, delete the previous package in case the version number didn't change
  stage: deploy
  when: manual
  only:
    - develop
  script:
    - poetry config repositories.gitlab ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
    - poetry build
    - poetry publish --repository gitlab -u gitlab-ci-token -p ${CI_JOB_TOKEN}

push_to_external_pipy_test_registry:
  stage: deploy
  when: manual
  only:
    - master
  script:
    - poetry config repositories.test https://test.pypi.org/legacy/
    - poetry build
    - poetry publish --repository test -u __token__ -p ${CR_PYPI_TEST_API_TOKEN}

push_to_external_pipy_release_registry:
  stage: deploy
  when: manual
  only:
    - master
  script:
    - poetry build
    - poetry publish -u __token__ -p ${CR_PYPI_RELEASE_API_TOKEN}
