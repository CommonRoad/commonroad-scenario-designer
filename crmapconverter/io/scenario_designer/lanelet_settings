

class LaneletSettings(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Lanelet settings")
        self.setGeometry(100, 100, 500, 300)
        self.win = QWidget()
        self.length = QLineEdit()
        self.length.setValidator(QIntValidator())
        self.length.setMaxLength(4)
        self.length.setAlignment(Qt.AlignRight)

        self.width = QLineEdit()
        self.width.setValidator(QIntValidator())
        self.width.setMaxLength(4)
        self.width.setAlignment(Qt.AlignRight)

        self.apply_button = QPushButton()
        self.apply_button.setText("apply")
        self.apply_button.clicked.connect(self.apply_button_click)

        self.set_default = QPushButton()
        self.set_default.setText("set default")
        self.set_default.clicked.connect(self.set_default_click)
        #num = map(int, self.length.text())
        #print(num)
        #print(self.length.text())

        layout = QFormLayout()
        layout.addRow("Lanelet length", self.length)
        layout.addRow("Lanelet with", self.width)
        layout.addWidget(self.apply_button)
        layout.addWidget(self.set_default)
       # self.win.connect(self.apply_button, SIGNAL("clicked()"), self.apply_button_click)

        #layout.addRow("Lanelet width", self.width)

        self.win.setLayout(layout)
        self.win.show()

    def apply_button_click(self):
        self.lanelet_length = int(self.length.text())
        print(self.lanelet_length)
        print(self.length.text())
        self.lanelet_width = map(int, self.width.text())
        print(self.width.text())
        self.win.close()


    def set_default_click(self):
        self.length.insert("50")
        self.width.insert("20")



    def getLaneletLength(self):
        if self.lanelet_length:
            return self.lanelet_length
        else:
            return 50

    def getLaneletWidth(self):
        if self.lanelet_width:
            return self.lanelet_width
        else:
            return 20

