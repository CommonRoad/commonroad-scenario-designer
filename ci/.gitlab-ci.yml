stages:
#    - style_check
    - test
    - build

image: $CI_REGISTRY/cps/commonroad-scenario-designer/ci:v0.6.9_20.04

.install-and-run: &install-and-run
  - pip install -e .
  - pip install -r ./tests/test_requirements.txt
  - coverage run --source ./crdesigner -m pytest tests/
  - coverage report -m || true

#style_checks:
#  stage: style_check
#  script:
#    - source activate cr39
#    - pip install pycodestyle
#    - git  diff ${CI_COMMIT_BEFORE_SHA}...${CI_COMMIT_SHA} -- '*.py' | pycodestyle --max-line-length=120 --diff
#  except:
#  - merge_requests
#
#style_check_merge_result:
#  stage: style_check
#  script:
#    - source activate cr39
#    - pip install pycodestyle
#    - git  diff ${CI_MERGE_REQUEST_TARGET_BRANCH_SHA}...${CI_MERGE_REQUEST_SOURCE_BRANCH_SHA} -- '*.py' | pycodestyle --max-line-length=120 --diff
#  only:
#  - merge_requests


python37:
    stage: test
    variables:
      QT_QPA_PLATFORM: "offscreen"
    script:
        - source activate cr37
        - *install-and-run

python38:
    stage: test
    variables:
      QT_QPA_PLATFORM : "offscreen"
    script:
        - source activate cr38
        - *install-and-run

python39:
    stage: test
    variables:
      QT_QPA_PLATFORM : "offscreen"
    script:
        - source activate cr39
        - *install-and-run

#python310 :
#  stage : test
#  variables :
#    QT_QPA_PLATFORM : "offscreen"
#  script :
#    - source activate cr310
#    - *install-and-run

docs:
    stage: test
    script:
        - source activate cr39
        - pip install -r ./docs/doc_requirements.txt
        - cd docs && bash ./docs_build_script.sh
    artifacts:
      paths :
        - ./docs/build/

build_package:
    stage: build
    only:
        - master
        - develop
    script:
        - source activate cr39
        - python setup.py sdist bdist_wheel
