stages:
    - static_check
    - test
    - build

image: $CI_REGISTRY/cps/commonroad-scenario-designer/ci:v0.6.9_20.04

.install-and-run: &install-and-run
  - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.lrz.de/".insteadOf "git@gitlab.lrz.de:"
  - pip install -r ./tests/test_requirements.txt
  - pip install -e .
  - git clone git@gitlab.lrz.de:cps/sumo-interface.git $HOME/sumo-interface
  - ls
  - cd $HOME/sumo-interface
  - git checkout fac8334df357a7599ccc51e5ae5aeee9c82d9cb5
  - cd $HOME
  - pip uninstall -y sumocr
  - pip install -e "$HOME"/sumo-interface
  - pip install commonroad-io==2022.2
  - coverage run --source ./crdesigner -m pytest tests/
  - coverage report -m || true

# static_check
# solution based on the `.gitlab-ci.yml` file of commonroad-io and this discussion: https://forum.gitlab.com/t/ci-cd-pipeline-get-list-of-changed-files/26847
# definition of $CI_COMMIT_BEFORE_SHA may be 0000000000000000000000000000000000000000 as stated here: https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
style_check:
  stage: static_check
  image: "python:3.11"
  script :
    - python -m pip install prospector[with_mypy]
    - git fetch --all
    - /bin/sh -c 
        'if [ "$CI_MERGE_REQUEST_ID" != "" ]; then
            git diff --name-only ${CI_MERGE_REQUEST_TARGET_BRANCH_SHA}..${CI_MERGE_REQUEST_SOURCE_BRANCH_SHA} -- '*.py';
        elif [ "$CI_COMMIT_BEFORE_SHA" != "0000000000000000000000000000000000000000" ]; then  
          git diff --name-only ${CI_COMMIT_BEFORE_SHA}..${CI_COMMIT_SHA} -- '*.py';     
        else 
          git diff --name-only $(git merge-base origin/${CI_DEFAULT_BRANCH} origin/${CI_COMMIT_BRANCH})..${CI_COMMIT_SHA} -- '*.py';     
        fi' | xargs -r -I {} python -m prospector {}


python37:
    stage: test
    variables:
      QT_QPA_PLATFORM: "offscreen"
    script:
        - source activate cr37
        - *install-and-run

python38:
    stage: test
    variables:
      QT_QPA_PLATFORM : "offscreen"
    script:
        - source activate cr38
        - *install-and-run

python39:
    stage: test
    variables:
      QT_QPA_PLATFORM : "offscreen"
    script:
        - source activate cr39
        - *install-and-run
        - coverage xml
    coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
    artifacts :
      reports :
        coverage_report :
          coverage_format : cobertura
          path : coverage.xml

#python310 :
#  stage : test
#  variables :
#    QT_QPA_PLATFORM : "offscreen"
#  script :
#    - source activate cr310
#    - *install-and-run

docs:
    stage: test
    script:
        - source activate cr39
        - pip install -e .
        - pip install -r ./docs/doc_requirements.txt
        - cd docs && bash ./docs_build_script.sh
    artifacts:
      paths :
        - ./docs/build/
      expose_as: 'Documentation'

build_package:
    stage: build
    only:
        - master
        - develop
    script:
        - source activate cr39
        - python setup.py sdist bdist_wheel
